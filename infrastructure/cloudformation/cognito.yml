AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for MCP OAuth2.1 Demo with AWS Cognito'

Parameters:
  UserPoolName:
    Type: String
    Default: MCPDemoUserPool
    Description: Name for the Cognito User Pool
  
  AppClientName:
    Type: String
    Default: MCPDemoClient
    Description: Name for the Cognito App Client
  
  CallbackURL:
    Type: String
    Default: http://localhost:3000/callback
    Description: Callback URL for the OAuth flow
  
  LogoutURL:
    Type: String
    Default: http://localhost:3000/logout
    Description: Logout URL for the OAuth flow

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref UserPoolName
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      MfaConfiguration: 'OFF'
      UserPoolTags:
        Project: MCP-OAuth-Demo

  # User Pool Domain
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Join 
        - '-'
        - - 'mcp-oauth-demo'
          - !Select [0, !Split ['-', !Ref 'AWS::StackName']]
      UserPoolId: !Ref UserPool

  # Cognito App Client for Web
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Ref AppClientName
      UserPoolId: !Ref UserPool
      GenerateSecret: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      CallbackURLs:
        - !Ref CallbackURL
      LogoutURLs:
        - !Ref LogoutURL
      SupportedIdentityProviders:
        - COGNITO
      PreventUserExistenceErrors: ENABLED
      EnableTokenRevocation: true
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      RefreshTokenValidity: 30
      AccessTokenValidity: 1
      IdTokenValidity: 1

  # Resource Server for API
  UserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: mcp-api
      Name: MCP API Resource Server
      UserPoolId: !Ref UserPool
      Scopes:
        - ScopeName: read
          ScopeDescription: Read access to MCP API
        - ScopeName: write
          ScopeDescription: Write access to MCP API

Outputs:
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolId"
  
  UserPoolDomain:
    Description: Cognito User Pool Domain
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref UserPoolDomain
        - '.auth.'
        - !Ref 'AWS::Region'
        - '.amazoncognito.com'
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolDomain"
  
  UserPoolClientId:
    Description: Cognito User Pool App Client ID
    Value: !Ref UserPoolClient
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolClientId"
  
  Region:
    Description: AWS Region where resources are deployed
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub "${AWS::StackName}-Region"